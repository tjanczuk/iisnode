<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <?if $(var.Platform) = x86 ?>
  <?define sourcedir="$(var.ProjectDir)..\..\..\build\$(var.Configuration)\x86\" ?>
  <?define isWin64="no" ?>
  <?if $(var.ProjectName) = iisnode-msi-full ?>
  <?define productName="iisnode for iis 7.x (x86) full" ?>
  <?else?>
  <?define productName="iisnode for iis 7.x (x86) core" ?>
  <?endif?>
  <?elseif $(var.Platform) = x64 ?>
  <?define sourcedir="$(var.ProjectDir)..\..\..\build\$(var.Configuration)\x64\" ?>
  <?define wowsourcedir="$(var.ProjectDir)..\..\..\build\$(var.Configuration)\x86\" ?>
  <?define isWin64="yes" ?>
  <?if $(var.ProjectName) = iisnode-msi-full ?>
  <?define productName="iisnode for iis 7.x (x64) full" ?>
  <?else?>
  <?define productName="iisnode for iis 7.x (x64) core" ?>
  <?endif?>
  <?endif?>

  <?include version_autogenerated.wxi ?>
  <!-- generated in pre-build steps -->

  <!-- 64 bit installers: 
       http://blogs.msdn.com/b/astebner/archive/2007/08/09/4317654.aspx,
       http://blogs.msdn.com/b/heaths/archive/2005/10/24/windows-installer-on-64-bit-platforms.aspx
   -->

  <Product Id="*"
           Name="$(var.productName)"
           Language="1033"
           Version="$(var.version)"
           Manufacturer="Microsoft Corporation"
           UpgradeCode="1d60944c-b9ce-4a71-a7c0-0384eb884b1f">

    <?if $(var.Platform) = x86 ?>
    <Package InstallerVersion="200" Compressed="yes" Platform="x86" />
    <?elseif $(var.Platform) = x64 ?>
    <Package InstallerVersion="200" Compressed="yes" Platform="x64"/>
    <?endif?>

    <MajorUpgrade AllowSameVersionUpgrades="yes" 
                  DowngradeErrorMessage="A later version of [ProductName] is already installed and cannot be replaced. If you intend to downgrade the version of [ProductName], please uninstall the current version manually." />

    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <Property Id="ALLUSERS" Value="1" />
    
    <PropertyRef Id="IISMAJORVERSION" />

    <Condition Message="IIS 7.x or later must be installed before iisnode installation.">
      <![CDATA[ Installed OR ((VersionNT = 600 AND ServicePackLevel >= 1) OR (VersionNT > 600)) ]]>
    </Condition>

    <Directory Id="TARGETDIR" Name="SourceDir">
      <?if $(var.isWin64) = "yes" ?>
      <Directory Id="System64Folder" />
      <?endif?>
    </Directory>

    <DirectoryRef Id="TARGETDIR">
      <Component Id="RegistryEntries" Guid="{204F256A-E453-453B-AFC6-49844892EE62}">
        <RegistryKey Root="HKLM"
                     Key="Software\Microsoft\IIS Extensions\iisnode"
              Action="createAndRemoveOnUninstall">
          <RegistryValue Type="integer" Name="Install" Value="1" KeyPath="yes"/>
          <RegistryValue Type="string" Name="Version" Value="$(var.version)"/>
          <RegistryValue Type="string" Value=""/>
        </RegistryKey>
      </Component>
    </DirectoryRef>    

    <Feature Id="iisnode4iis" Title="Hosting node.js applications in IIS 7.x" Level="1" Description="IIS 7.x native module for hosting node.js applications in IIS">
      <ComponentGroupRef Id="allfiles" />
      <?if $(var.isWin64) = "yes" ?>
      <ComponentGroupRef Id="allfileswow" />
      <?endif?>
      <ComponentRef Id="RegistryEntries" /> 
    </Feature>

    <?if $(var.ProjectName) = iisnode-msi-full ?>
    <WixVariable Id="WixUILicenseRtf" Value="$(var.ProjectDir)\License.rtf" />
    <?else?>
    <WixVariable Id="WixUILicenseRtf" Value="$(var.ProjectDir)\License_core.rtf" />
    <?endif?>
    <UIRef Id="WixUI_Minimal" />

    <InstallExecuteSequence>

      <?if $(var.isWin64) = "no" ?>
      <Custom Action="CA_Err32BitMsiOn64BitOS" After="LaunchConditions">
        <![CDATA[MsiAMD64 OR Intel64]]>
      </Custom>
      <?endif ?>

      <!-- Conditions for custom actions:
         http://stackoverflow.com/questions/537584/how-to-execute-custom-action-only-in-install-not-uninstall
         http://stackoverflow.com/questions/128279/how-best-to-define-a-custom-action-in-wix 
      -->

      <!-- install/rollback/uninstall iisnode section under system.webServer -->

      <Custom Action="AddIisnodeSection" After="InstallFiles">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="RollbackAddIisnodeSection" After="InstallFiles">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="UndoAddIisnodeSection" After="InstallFiles">REMOVE="ALL"</Custom>

      <!-- remove iisnode module registration -->

      <Custom Action="RemoveIisnodeModuleRegistration" After="AddIisnodeSection" />

      <!-- install/rollback/uninstall iisnode module -->

      <Custom Action="AddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="RollbackAddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="UndoAddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE="ALL"</Custom>

    </InstallExecuteSequence>

  </Product>

  <?if $(var.Platform) = x86 ?>
  <?include iisnodefiles.wxi ?>
  <?elseif $(var.Platform) = x64 ?>
  <?include iisnodefiles64.wxi ?>
  <?include iisnodefiles64wow.wxi ?>
  <?endif?>

  <?include customactions.wxi ?>

</Wix>
