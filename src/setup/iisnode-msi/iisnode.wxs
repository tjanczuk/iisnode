<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <?if $(var.Platform) = x86 ?>
  <?define sourcedir="$(var.SolutionDir)..\..\build\$(var.Configuration)\x86\" ?>
  <?define isWin64="no" ?>
  <?define productName="iisnode for iis 7.x (x86)" ?>
  <?elseif $(var.Platform) = x64 ?>
  <?define sourcedir="$(var.SolutionDir)..\..\build\$(var.Configuration)\amd64\" ?>
  <?define wowsourcedir="$(var.SolutionDir)..\..\build\$(var.Configuration)\x86\" ?>
  <?define isWin64="yes" ?>
  <?define productName="iisnode for iis 7.x (x64)" ?>
  <?endif?>

  <?include version_autogenerated.wxi ?>
  <!-- generated in pre-build steps -->

  <!-- 64 bit installers: 
       http://blogs.msdn.com/b/astebner/archive/2007/08/09/4317654.aspx,
       http://blogs.msdn.com/b/heaths/archive/2005/10/24/windows-installer-on-64-bit-platforms.aspx
   -->

  <Product Id="cc6c176e-e26c-48ec-8970-f58bd1d046ce"
           Name="$(var.productName)"
           Language="1033"
           Version="$(var.version)"
           Manufacturer="Microsoft Corporation"
           UpgradeCode="1d60944c-b9ce-4a71-a7c0-0384eb884b1f">

    <?if $(var.Platform) = x86 ?>
    <Package InstallerVersion="200" Compressed="yes" Platform="x86" />
    <?elseif $(var.Platform) = x64 ?>
    <Package InstallerVersion="200" Compressed="yes" Platform="x64"/>
    <?endif?>

    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <Property Id="NODEEXE">
      <DirectorySearch Id="NodeDir" Path="[ProgramFilesFolder]nodejs">
        <FileSearch Name="node.exe" />
      </DirectorySearch>
    </Property>

    <!-- http://blogs.msdn.com/b/astebner/archive/2010/05/05/10008146.aspx -->

    <Property Id="VCREDIST2010INSTALLED">
      <?if $(var.isWin64) = "yes"?>
      <RegistrySearch Id="VCRedist2010Search64" Root="HKLM" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\{DA5E371C-6333-3D8A-93A4-6FD5B20BCC6E}" Name="InstallDate" Type="raw" />
      <?else?>
      <RegistrySearch Id="VCRedist2010Search32" Root="HKLM" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\{196BB40D-1578-3D01-B289-BEFC77A11A1E}" Name="InstallDate" Type="raw" />
      <?endif?>
    </Property>

    <Property Id="VCREDIST2010SP1INSTALLED">
      <?if $(var.isWin64) = "yes"?>
      <RegistrySearch Id="VCRedist2010SP1Search64" Root="HKLM" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\{1D8E6291-B0D5-35EC-8441-6616F567A0F7}" Name="InstallDate" Type="raw" />
      <?else?>
      <RegistrySearch Id="VCRedist2010SP1Search32" Root="HKLM" Key="Software\Microsoft\Windows\CurrentVersion\Uninstall\{F0C3E5D1-1ADE-321E-8167-68EF0DE699A5}" Name="InstallDate" Type="raw" />
      <?endif?>
    </Property>
    
    <PropertyRef Id="IISMAJORVERSION" />

    <?if $(var.isWin64) = "yes"?>
    <Condition Message="Microsoft Visual C++ 2010 Redistributable Package (x64) is required but not installed. Please install it then rerun this installer.">
      <![CDATA[INstalled OR VCREDIST2010INSTALLED OR VCREDIST2010SP1INSTALLED]]>
    </Condition>
    <?else?>
    <Condition Message="Microsoft Visual C++ 2010 Redistributable Package (x86) is required but not installed. Please install it then rerun this installer.">
      <![CDATA[INstalled OR VCREDIST2010INSTALLED OR VCREDIST2010SP1INSTALLED]]>
    </Condition>
    <?endif?>

    <Condition Message="IIS 7.x must be installed before iisnode installation.">
      <![CDATA[IISMAJORVERSION >= "#7"]]>
    </Condition>

    <Condition Message="The node.exe is not found at [ProgramFilesFolder]nodejs. IIS cannot serve node.js applications without node.exe. Please run the latest node.js installer from https://github.com/tjanczuk/node/archives/master, then restart this installer.">
      <![CDATA[Installed OR NODEEXE]]>
    </Condition>

    <Directory Id="TARGETDIR" Name="SourceDir">
      <?if $(var.isWin64) = "yes" ?>
      <Directory Id="System64Folder" />
      <?endif?>
    </Directory>

    <Feature Id="iisnode4iis" Title="Hosting node.js applications in IIS 7.x" Level="1" Description="IIS 7.x native module for hosting node.js applications in IIS">
      <ComponentGroupRef Id="allfiles" />
      <ComponentGroupRef Id="Product.Generated" />
      <Condition Level="1">NOT WOW</Condition>
    </Feature>

    <?if $(var.isWin64) = "yes" ?>
    <Feature Id="iisnode4iiswow" Title="Hosting node.js applications in IIS 7.x in WOW mode" Level="1" Description="IIS 7.x native module for hosting node.js applications in IIS in WOW mode">
      <ComponentGroupRef Id="allfileswow" />
      <ComponentGroupRef Id="Product.Generated" />
      <Condition Level="1">WOW</Condition>
    </Feature>
    <?endif?>

    <WixVariable Id="WixUILicenseRtf" Value="$(var.ProjectDir)\License.rtf" />
    <UIRef Id="WixUI_Minimal" />

    <InstallExecuteSequence>

      <?if $(var.isWin64) = "no" ?>
      <Custom Action="CA_Err32BitMsiOn64BitOS" After="LaunchConditions">
        <![CDATA[MsiAMD64 OR Intel64]]>
      </Custom>
      <?endif ?>

      <!-- Conditions for custom actions:
         http://stackoverflow.com/questions/537584/how-to-execute-custom-action-only-in-install-not-uninstall
         http://stackoverflow.com/questions/128279/how-best-to-define-a-custom-action-in-wix 
      -->

      <!-- install/rollback/uninstall iisnode section under system.webServer -->

      <Custom Action="AddIisnodeSection" After="InstallFiles">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="RollbackAddIisnodeSection" After="InstallFiles">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="UndoAddIisnodeSection" After="InstallFiles">REMOVE="ALL"</Custom>

      <!-- remove iisnode module registration -->

      <Custom Action="RemoveIisnodeModuleRegistration" After="AddIisnodeSection" />

      <!-- install/rollback/uninstall iisnode module -->

      <?if $(var.isWin64) = "yes" ?>
      <Custom Action="AddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">(REMOVE&lt;>"ALL") AND (NOT WOW)</Custom>      
      <Custom Action="AddIisnodeModuleRegistrationWow" After="RemoveIisnodeModuleRegistration">(REMOVE&lt;>"ALL") AND WOW</Custom>
      <?else?>
      <Custom Action="AddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE&lt;>"ALL"</Custom>
      <?endif?>
      <Custom Action="RollbackAddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE&lt;>"ALL"</Custom>
      <Custom Action="UndoAddIisnodeModuleRegistration" After="RemoveIisnodeModuleRegistration">REMOVE="ALL"</Custom>

      <!-- grant permissions for default IIS user to read and execute pre-installed node.exe -->

      <Custom Action="AddPermissionsToNodeExeForDefaultIISUser" After="AddIisnodeModuleRegistration">REMOVE&lt;>"ALL"</Custom>

    </InstallExecuteSequence>

  </Product>

  <?if $(var.Platform) = x86 ?>
  <?include iisnodefiles.wxi ?>
  <?elseif $(var.Platform) = x64 ?>
  <?include iisnodefiles64.wxi ?>
  <?include iisnodefiles64wow.wxi ?>
  <?endif?>

  <?include customactions.wxi ?>

</Wix>
